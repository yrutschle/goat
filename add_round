#! /usr/bin/perl -w

# Goat: Gentil Organisateur et Administrateur de Tournois
# Copyright (C) 2006-2017 Yves Rutschle
# 
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later
# version.
# 
# This program is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more
# details.
# 
# The full text for the General Public License is here:
# http://www.gnu.org/licenses/gpl.html

=head1 NAME

add_round -- creates a new round in a tournament

=head1 SYNOPSIS

add_round --file <toperm> [--date <date>]

=head1 DESCRIPTION

I<add_round> simply creates an empty round in a tournament.
In conjunction with I<add_game>, it can be used to import
pairings made with another program.

If the B<date> is specified, it will be displayed in
all reminders. If not specified, one month from now is
picked. ( just like <pair>  programm ).

You would go about it as such:

  add_round -f toperm -d "19 juin 2017"
  add_game -f toperm --black alice@example.org --white bob@example.com
  add_game -f toperm --black jack@example.org --white jane@example.net
  [...]
  goat --status

=cut

use strict;

# Check we have the right environment variables to find
# the modules, and add to @INC.
BEGIN {
    die "Environment variable GOAT_DIR and WORK_DIR must be defined\n" 
        if not defined $ENV{GOAT_DIR} or not defined $ENV{WORK_DIR};

    push @INC, $ENV{GOAT_DIR};
}

use Tournament;
use Getopt::Long;
use Pod::Usage;
use GoatLib;


# Interpret command line
my ($testing, $param_file, $param_final_date, $help);
GetOptions(
    'help' => \$help,
    'file=s' => \$param_file,
    'date=s' => \$param_final_date,
) or die pod2usage();

die pod2usage(-verbose=>2) if defined $help;
die "No tournament file specified. Use -f <file>.\n" unless defined $param_file;


my $Tournament = Tournament->load($param_file);

my $round_num = ($Tournament->round_number || 0) + 1;
print "Creating round $round_num\n";
my $round = Round->new($round_num);

# make date or get from opt
my $final_date;
if (defined $param_final_date) {
    $final_date = parse_datestr($param_final_date);
    die "Wrong date format $param_final_date." unless defined $final_date;
} else {
    $final_date = time + 30 * 24 * 3600; # one month in the future
}


$round->final_date($final_date);
$Tournament->add_round($round_num, $round);
$Tournament->save($param_file);

